{
  "devicesSchemas": [
    {
      "guid": "iot4electronics_washing_machine",
      "name": "washingMachine",
      "mqttOutputs": [
        {
          "name": "statusReport",
          "qos": "0",
          "payload": "status,failureType,program,currentCycle,vibration,waterPressure,serialNumber,make,model",
          "pattern": {
            "rate": 3,
            "type": "Periodic"
          }
        },
        {
          "name": "failureAlert",
          "qos": "0",
          "payload": "failureType",
          "pattern": {
            "rate": 1,
            "type": "OnChange"
          }
        }
      ],
      "attributes": [
        {
          "name": "currentCycle",
          "defaultValue": "Empty"
        },
        {
          "name": "failureType"
        },
        {
          "name": "status",
          "defaultValue": "Ready"
        },
        {
          "name": "doorOpen",
          "defaultValue": "false"
        },
        {
          "name": "program",
          "defaultValue": "Cottons"
        },
        {
          "name": "vibration",
          "defaultValue": "80"
        },
        {
          "name": "waterPressure",
          "defaultValue": "70"
        },
        {
          "name": "serialNumber"
        },
        {
          "name": "make",
          "defaultValue": "Swirlmore"
        },
        {
          "name": "model",
          "defaultValue": "wkw007ge"
        }
      ],
      "simulation": {
        "onConnectedCode": null,
        "onInitCode": "var timeoutID = null;\n\nthis.clearWashingTimeout = _.bind(function(){\n\tif(timeoutID){\n\t\tclearTimeout(timeoutID);\n\t\ttimeoutID = null;\n\t}\n}, this);\n\nthis.startWashing = _.bind(function(){\n\tif((this.status !== \"Ready\" && this.status !== \"Stopped\") || this.doorOpen == \"true\")\n\t\treturn;\n\t\n  \tvar cyclesTimes = [7000, 5000, 5000, 5000, 5000, 5000];\n\tvar cyclesStates = [\"Filling\", \"Litespinning\", \"Soaking\", \"Spinning\", \"Drainning\", \"End\"];\n\tvar cycleIndex = (this.status == \"Stopped\") ? \n        \t\tcyclesStates.indexOf(this.currentCycle) : 0;\n\t\n  \tthis.status = \"Working\";\n \tvar nextCycleFunc = _.bind(function(){\n\t\tthis.currentCycle = cyclesStates[cycleIndex];\n\t\tvar cycletime = cyclesTimes[cycleIndex];\n      \t\n\t\tif(cyclesStates.length == cycleIndex){ //done\n\t\t\tthis.currentCycle = \"Empty\";\n\t\t\tthis.status = \"Ready\";\n\t\t\ttimeoutID = null;\n\t\t}\n\t\telse{ //next cycle\n\t\t\tcycleIndex++;\t\n          \ttimeoutID = setTimeout(nextCycleFunc, cycletime);          \t\n        }\n\t}, this);\n\n\t// do start/resume washing\n\tnextCycleFunc();\n}, this);\n\nthis.stopWashing = _.bind(function(){\n\tif(this.status !== \"Working\")\n\t\treturn;//not working\n\tthis.status = \"Stopped\";\n\tthis.clearWashingTimeout();\n}, this);\n\nvar generateSerialNumber = function(){\n\tvar serialNumber = String(Math.floor(Math.random()*900) + 100);\n\tserialNumber = serialNumber.concat(new Date().getTime());\n\tserialNumber = [serialNumber.slice(0, 4), '-', serialNumber.slice(4, 8), '-', serialNumber.slice(8, 12), '-', serialNumber.slice(12)].join('');\n\treturn serialNumber;\n}\n\nthis.serialNumber = generateSerialNumber();",
        "onMessageReceptionCode": "payload = (payload) ? JSON.parse(payload) : {};\nswitch(message){\n  case \"startWashing\":\n    this.startWashing();\n    break;\n  case \"stopWashing\":\n    this.stopWashing();\n}",
        "onRunningCode": "if(this.status == \"Failure\"){\n\tthis.clearWashingTimeout();\n}",
        "onRunningPeriodSec": "3"
      }
    }
  ],
  "devices": []
}